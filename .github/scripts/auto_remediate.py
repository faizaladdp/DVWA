import json
import os
from github import Github
from datetime import datetime

# GitHub token
token = os.environ["GITHUB_TOKEN"]
repo_name = os.getenv("GITHUB_REPOSITORY")

# Initialize GitHub client
g = Github(token)
repo = g.get_repo(repo_name)

# Load pip-audit report
report_path = "audit-report.json"
if not os.path.exists(report_path):
    print("❌ No pip-audit report found.")
    exit(0)

with open(report_path, "r") as f:
    data = json.load(f)

if not data:
    print("✅ No vulnerabilities found.")
    exit(0)

print(f"⚠️ {len(data)} vulnerabilities found. Preparing auto-fix...")

# Read requirements
with open("requirements.txt", "r") as f:
    lines = f.readlines()

# Track changes
updated = False
for item in data:
    name = item["name"]
    version = item["version"]
    fix_versions = item.get("fix_versions", [])
    if fix_versions:
        new_version = fix_versions[-1]  # Pick latest secure version
        for i, line in enumerate(lines):
            if line.lower().startswith(name.lower()):
                lines[i] = f"{name}=={new_version}\n"
                updated = True
                print(f"🔧 Updated {name} {version} → {new_version}")

# Save updates
if updated:
    with open("requirements.txt", "w") as f:
        f.writelines(lines)

    branch_name = f"auto-fix-{datetime.now().strftime('%Y%m%d%H%M%S')}"
    repo.create_git_ref(ref=f"refs/heads/{branch_name}", sha=repo.get_branch("main").commit.sha)
    repo.update_file(
        path="requirements.txt",
        message="🤖 Auto Remediation: Updated vulnerable dependencies",
        content="".join(lines),
        sha=repo.get_contents("requirements.txt", ref=branch_name).sha,
        branch=branch_name
    )
    repo.create_pull(
        title="🤖 Auto Remediation: Dependency Updates",
        body="This PR was automatically generated by the DevSecOps bot to patch vulnerable dependencies.",
        head=branch_name,
        base="main"
    )
    print("✅ Auto-fix PR created successfully.")
else:
    print("✅ No vulnerable dependencies found to fix.")
